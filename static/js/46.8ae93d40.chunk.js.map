{"version":3,"file":"static/js/46.8ae93d40.chunk.js","mappings":"iOAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAItBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8CAKtBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sGAOtBK,EAASP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8BAIlBO,EAAUT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wB,SCiC/B,EA3CgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAa1B,OAXAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBACmBT,GAChBU,MAAK,SAAAC,GACJJ,EAAWI,EAASC,KAAKC,QAC3B,IACCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,EAC3C,GACJ,GAAG,CAACf,KAGFiB,EAAAA,EAAAA,KAAC7B,EAAS,CAAA8B,SACY,IAAnBZ,EAAQa,QACPF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+CAEHD,EAAAA,EAAAA,KAACzB,EAAU,CAAA0B,SACRZ,EAAQc,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAC5B,EAAU,CAAAwB,SAAA,EACTD,EAAAA,EAAAA,KAACrB,EAAM,CAAAsB,SAAEG,EAAOE,UAChBN,EAAAA,EAAAA,KAACnB,EAAO,CAAAoB,SAAEG,EAAOG,YAFFH,EAAOI,GAGX,OAMzB,C,mECzCAC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHlB,EAAW,CACtBmB,kBAAmB,WACjB,OAAOF,EAAAA,EAAAA,IAAU,+BAADG,OAAgCF,GAClD,EAEAG,aAAc,SAAAC,GACZ,OAAOL,EAAAA,EAAAA,IAAU,yBAADG,OAA0BF,EAAO,WAAAE,OAAUE,GAC7D,EAEAC,gBAAiB,SAAAhC,GACf,OAAO0B,EAAAA,EAAAA,IAAU,UAADG,OAAW7B,EAAO,aAAA6B,OAAYF,GAChD,EAEAM,aAAc,SAAAjC,GACZ,OAAO0B,EAAAA,EAAAA,IAAU,UAADG,OAAW7B,EAAO,qBAAA6B,OAAoBF,GACxD,EAEAO,gBAAiB,SAAAlC,GACf,OAAO0B,EAAAA,EAAAA,IAAU,UAADG,OAAW7B,EAAO,qBAAA6B,OAAoBF,GACxD,E","sources":["components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px;\r\n`;\r\n\r\nexport const ReviewList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const ReviewItem = styled.li`\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Author = styled.h4`\r\n  margin: 0 0 5px;\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 0;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchApi } from '../../services/fetchApi';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  ReviewList,\r\n  ReviewItem,\r\n  Author,\r\n  Content,\r\n} from './ReviewsStyled';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchApi\r\n      .getMovieReviews(movieId)\r\n      .then(response => {\r\n        setReviews(response.data.results);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching reviews:', error);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Container>\r\n      {reviews.length === 0 ? (\r\n        <p>We don't have any reviews for this movie.</p>\r\n      ) : (\r\n        <ReviewList>\r\n          {reviews.map(review => (\r\n            <ReviewItem key={review.id}>\r\n              <Author>{review.author}</Author>\r\n              <Content>{review.content}</Content>\r\n            </ReviewItem>\r\n          ))}\r\n        </ReviewList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\r\n\r\nexport const fetchApi = {\r\n  getTrendingMovies: () => {\r\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  },\r\n\r\n  searchMovies: query => {\r\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\r\n  },\r\n\r\n  getMovieDetails: movieId => {\r\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieCast: movieId => {\r\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieReviews: movieId => {\r\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\r\n  },\r\n};\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ReviewList","_templateObject2","ReviewItem","_templateObject3","Author","_templateObject4","Content","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchApi","then","response","data","results","catch","error","console","_jsx","children","length","map","review","_jsxs","author","content","id","axios","API_KEY","getTrendingMovies","concat","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}