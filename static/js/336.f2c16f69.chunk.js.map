{"version":3,"file":"static/js/336.f2c16f69.chunk.js","mappings":"2PAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAItBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8CAKpBG,EAAcL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2IASvBK,EAAaP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iHAQvBO,EAAYT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4DAMrBS,EAAkBX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wCAK1BW,EAAgBb,EAAAA,GAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gD,SCiCxC,EAzDa,WACX,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAapB,OAXAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aACgBT,GACbU,MAAK,SAAAC,GACJJ,EAAQI,EAASC,KAAKN,KACxB,IACCO,OAAM,SAAAC,GACLC,QAAQD,MAAM,uBAAwBA,EACxC,GACJ,GAAG,CAACd,KAGFgB,EAAAA,EAAAA,KAAChC,EAAS,CAAAiC,SACS,IAAhBX,EAAKY,QACJF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wDAEHD,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA6B,SACNX,EAAKa,KAAI,SAACC,EAAOC,GAAK,OACrBC,EAAAA,EAAAA,MAAChC,EAAW,CAAA2B,SAAA,EACVD,EAAAA,EAAAA,KAACxB,EAAU,CACT+B,IACEH,EAAMI,aAAY,kCAAAC,OACoBL,EAAMI,cACxC,sHAENE,IAAKN,EAAMO,QAEbL,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACED,EAAAA,EAAAA,KAACtB,EAAS,CAAAuB,SAAEG,EAAMO,QAClBL,EAAAA,EAAAA,MAAC1B,EAAe,CAAAqB,SAAA,EACdD,EAAAA,EAAAA,KAAClB,EAAa,CAAAmB,SAAC,eAA0B,IAAEG,EAAMQ,kBAE/C,GAAAH,OAdaL,EAAMS,GAAE,KAAAJ,OAAIJ,GAenB,OAM1B,C,mECxDAS,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHtB,EAAW,CACtBuB,kBAAmB,WACjB,OAAOF,EAAAA,EAAAA,IAAU,+BAADL,OAAgCM,GAClD,EAEAE,aAAc,SAAAC,GACZ,OAAOJ,EAAAA,EAAAA,IAAU,yBAADL,OAA0BM,EAAO,WAAAN,OAAUS,GAC7D,EAEAC,gBAAiB,SAAAnC,GACf,OAAO8B,EAAAA,EAAAA,IAAU,UAADL,OAAWzB,EAAO,aAAAyB,OAAYM,GAChD,EAEAK,aAAc,SAAApC,GACZ,OAAO8B,EAAAA,EAAAA,IAAU,UAADL,OAAWzB,EAAO,qBAAAyB,OAAoBM,GACxD,EAEAM,gBAAiB,SAAArC,GACf,OAAO8B,EAAAA,EAAAA,IAAU,UAADL,OAAWzB,EAAO,qBAAAyB,OAAoBM,GACxD,E","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px;\r\n`;\r\n\r\nexport const CastList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const StyledActor = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const ActorImage = styled.img`\r\n  width: 100px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nexport const ActorName = styled.h3`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #333;\r\n`;\r\n\r\nexport const StyledCharacter = styled.p`\r\n  margin: 0;\r\n  color: #777;\r\n`;\r\n\r\nexport const CharacterText = styled.span`\r\n  font-weight: bold;\r\n  color: #333;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchApi } from '../../services/fetchApi';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Container,\r\n  CastList,\r\n  StyledActor,\r\n  ActorImage,\r\n  ActorName,\r\n  StyledCharacter,\r\n  CharacterText,\r\n} from './CastStyled';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchApi\r\n      .getMovieCast(movieId)\r\n      .then(response => {\r\n        setCast(response.data.cast);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching cast:', error);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Container>\r\n      {cast.length === 0 ? (\r\n        <p>We don't have any cast information for this movie.</p>\r\n      ) : (\r\n        <CastList>\r\n          {cast.map((actor, index) => (\r\n            <StyledActor key={`${actor.id}-${index}`}>\r\n              <ActorImage\r\n                src={\r\n                  actor.profile_path\r\n                    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\r\n                    : 'https://www.njca.com.au/wp-content/uploads/2023/03/depositphotos_137014128-stock-illustration-user-profile-icon.jpg'\r\n                }\r\n                alt={actor.name}\r\n              />\r\n              <div>\r\n                <ActorName>{actor.name}</ActorName>\r\n                <StyledCharacter>\r\n                  <CharacterText>Character:</CharacterText> {actor.character}\r\n                </StyledCharacter>\r\n              </div>\r\n            </StyledActor>\r\n          ))}\r\n        </CastList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string,\r\n      character: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\r\n\r\nexport const fetchApi = {\r\n  getTrendingMovies: () => {\r\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  },\r\n\r\n  searchMovies: query => {\r\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\r\n  },\r\n\r\n  getMovieDetails: movieId => {\r\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieCast: movieId => {\r\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieReviews: movieId => {\r\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\r\n  },\r\n};\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","StyledActor","_templateObject3","ActorImage","_templateObject4","ActorName","_templateObject5","StyledCharacter","_templateObject6","CharacterText","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchApi","then","response","data","catch","error","console","_jsx","children","length","map","actor","index","_jsxs","src","profile_path","concat","alt","name","character","id","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}