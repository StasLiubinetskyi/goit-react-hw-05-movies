{"version":3,"file":"static/js/767.b9c1f49e.chunk.js","mappings":"qQAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEAMtBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gFAMpBG,EAAcL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sDAKxBK,EAAYP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sBAItBO,EAAgBT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8EAQ1BS,EAAWX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mE,GAMVF,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yFAOFF,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8M,QCczC,EA9CqB,WACnB,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,IAEpCI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBACmBT,GAChBU,MAAK,SAAAC,GACJJ,EAAgBI,EAASC,KAC3B,IACCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EACjD,GACJ,GAAG,CAACd,IAEJ,IAAyBgB,EAMzB,OACEC,EAAAA,EAAAA,MAACjC,EAAS,CAAAkC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAAUC,MAAO,CAAEC,aAAc,QAASL,SAAC,aAGpDD,EAAAA,EAAAA,MAAC7B,EAAO,CAAA8B,SAAA,EACNC,EAAAA,EAAAA,KAAC7B,EAAW,CACVkC,KAbiBR,EAaKV,EAAamB,YAZlCT,EAAI,kCAAAU,OAC2BV,GAClC,6FAWEW,IAAKrB,EAAasB,SAEpBX,EAAAA,EAAAA,MAACzB,EAAS,CAAA0B,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,EAAasB,SAClBX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaZ,EAAauB,iBAC7BV,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SAAEZ,EAAawB,kBAI5Bb,EAAAA,EAAAA,MAACvB,EAAa,CAAAwB,SAAA,EACZC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAK,OAAa1B,EAAO,SAAQkB,SAAC,UACrCC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAK,OAAa1B,EAAO,YAAWkB,SAAC,iBAIhD,C,mECtDAa,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHvB,EAAW,CACtBwB,kBAAmB,WACjB,OAAOF,EAAAA,EAAAA,IAAU,+BAADL,OAAgCM,GAClD,EAEAE,aAAc,SAAAC,GACZ,OAAOJ,EAAAA,EAAAA,IAAU,yBAADL,OAA0BM,EAAO,WAAAN,OAAUS,GAC7D,EAEAC,gBAAiB,SAAApC,GACf,OAAO+B,EAAAA,EAAAA,IAAU,UAADL,OAAW1B,EAAO,aAAA0B,OAAYM,GAChD,EAEAK,aAAc,SAAArC,GACZ,OAAO+B,EAAAA,EAAAA,IAAU,UAADL,OAAW1B,EAAO,qBAAA0B,OAAoBM,GACxD,EAEAM,gBAAiB,SAAAtC,GACf,OAAO+B,EAAAA,EAAAA,IAAU,UAADL,OAAW1B,EAAO,qBAAA0B,OAAoBM,GACxD,E","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 300px;\n  margin-right: 20px;\n`;\n\nexport const MovieText = styled.div`\n  flex: 1;\n`;\n\nexport const ToggleButtons = styled.div`\n  margin-bottom: 20px;\n\n  button {\n    margin-right: 10px;\n  }\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  margin-top: 10px;\n  color: #333;\n`;\n\nexport const Genres = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin-top: 10px;\n  color: #333;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 5px 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\nimport {\n  Container,\n  Content,\n  MoviePoster,\n  MovieText,\n  ToggleButtons,\n  Overview,\n} from './MovieDetailsStyled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    fetchApi\n      .getMovieDetails(movieId)\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  const compilePosterURL = path => {\n    return path\n      ? `https://image.tmdb.org/t/p/w500${path}`\n      : 'https://t3.ftcdn.net/jpg/05/90/75/40/360_F_590754013_CoFRYEcAmLREfB3k8vjzuyStsDbMAnqC.jpg';\n  };\n\n  return (\n    <Container>\n      <Link to=\"/movies\" style={{ marginBottom: '20px' }}>\n        Go back\n      </Link>\n      <Content>\n        <MoviePoster\n          src={compilePosterURL(movieDetails.poster_path)}\n          alt={movieDetails.title}\n        />\n        <MovieText>\n          <h2>{movieDetails.title}</h2>\n          <p>User Score: {movieDetails.vote_average}</p>\n          <Overview>{movieDetails.overview}</Overview>\n        </MovieText>\n      </Content>\n\n      <ToggleButtons>\n        <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n      </ToggleButtons>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\n\nexport const fetchApi = {\n  getTrendingMovies: () => {\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  },\n\n  searchMovies: query => {\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  },\n\n  getMovieDetails: movieId => {\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  },\n\n  getMovieCast: movieId => {\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  },\n\n  getMovieReviews: movieId => {\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  },\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","MoviePoster","_templateObject3","MovieText","_templateObject4","ToggleButtons","_templateObject5","Overview","_templateObject6","_templateObject7","_templateObject8","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetchApi","then","response","data","catch","error","console","path","_jsxs","children","_jsx","Link","to","style","marginBottom","src","poster_path","concat","alt","title","vote_average","overview","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}