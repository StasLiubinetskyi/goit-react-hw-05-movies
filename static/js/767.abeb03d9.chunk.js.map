{"version":3,"file":"static/js/767.abeb03d9.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  align-items: flex-start;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const MoviePoster = styled.img`\r\n  max-width: 300px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const MovieText = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const ToggleButtons = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  margin-right: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  border-radius: 5px;\r\n  color: white;\r\n  text-decoration: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nexport const AdditionalInfo = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const GoBackLink = styled(Link)`\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  border-radius: 5px;\r\n  color: white;\r\n  text-decoration: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nexport const OverviewContainer = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const GenreContainer = styled.div`\r\n  font-size: 16px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const GenreList = styled.span`\r\n  font-weight: normal;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\r\nimport { fetchApi } from '../../services/fetchApi';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Content,\r\n  MoviePoster,\r\n  MovieText,\r\n  ToggleButtons,\r\n  OverviewContainer,\r\n  GenreContainer,\r\n  Label,\r\n  GenreList,\r\n  StyledLink,\r\n  AdditionalInfo,\r\n  GoBackLink,\r\n} from './MovieDetailsStyled';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n  const [releaseDate, setReleaseDate] = useState('');\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetchApi\r\n      .getMovieDetails(movieId)\r\n      .then(response => {\r\n        setMovieDetails(response.data);\r\n        setReleaseDate(response.data.release_date);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching movie details:', error);\r\n      });\r\n  }, [movieId]);\r\n\r\n  const compilePosterURL = path => {\r\n    return path\r\n      ? `https://image.tmdb.org/t/p/w500${path}`\r\n      : 'https://t3.ftcdn.net/jpg/05/90/75/40/360_F_590754013_CoFRYEcAmLREfB3k8vjzuyStsDbMAnqC.jpg';\r\n  };\r\n\r\n  const shouldDisplayCastReviews =\r\n    location.pathname.endsWith('/cast') ||\r\n    location.pathname.endsWith('/reviews');\r\n\r\n  return (\r\n    <Container>\r\n      <GoBackLink to={location.state?.from ?? '/'}>Go back</GoBackLink>\r\n      <Content>\r\n        <MoviePoster\r\n          src={compilePosterURL(movieDetails.poster_path)}\r\n          alt={movieDetails.title}\r\n        />\r\n        <MovieText>\r\n          <h2>\r\n            {movieDetails.title}\r\n            {releaseDate && ` (${releaseDate.substring(0, 4)})`}\r\n          </h2>\r\n          <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\r\n          <OverviewContainer>\r\n            <Label>Overview: </Label>\r\n            <GenreList>{movieDetails.overview}</GenreList>\r\n          </OverviewContainer>\r\n          <GenreContainer>\r\n            <Label>Genres: </Label>\r\n            <GenreList>\r\n              {movieDetails.genres?.map((genre, index) =>\r\n                index === 0 ? genre.name : `, ${genre.name}`\r\n              )}\r\n            </GenreList>\r\n          </GenreContainer>\r\n        </MovieText>\r\n      </Content>\r\n\r\n      <AdditionalInfo>\r\n        <h3>Additional Information:</h3>\r\n      </AdditionalInfo>\r\n\r\n      <ToggleButtons>\r\n        <StyledLink to={`/movies/${movieId}/cast${location.search}`}>\r\n          Cast:\r\n        </StyledLink>\r\n        <StyledLink to={`/movies/${movieId}/reviews${location.search}`}>\r\n          Reviews:\r\n        </StyledLink>\r\n      </ToggleButtons>\r\n\r\n      {shouldDisplayCastReviews && <Outlet />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nMovieDetails.propTypes = {\r\n  urlImg: PropTypes.string,\r\n  title: PropTypes.string,\r\n  releaseDate: PropTypes.number,\r\n  voteAverage: PropTypes.number,\r\n  overview: PropTypes.string,\r\n  genres: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\r\n\r\nexport const fetchApi = {\r\n  getTrendingMovies: () => {\r\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  },\r\n\r\n  searchMovies: query => {\r\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\r\n  },\r\n\r\n  getMovieDetails: movieId => {\r\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieCast: movieId => {\r\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n  },\r\n\r\n  getMovieReviews: movieId => {\r\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\r\n  },\r\n};\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","MoviePoster","_templateObject3","MovieText","_templateObject4","ToggleButtons","_templateObject5","StyledLink","Link","_templateObject6","AdditionalInfo","_templateObject7","GoBackLink","_templateObject8","OverviewContainer","_templateObject9","GenreContainer","_templateObject10","Label","_templateObject11","GenreList","_templateObject12","_location$state$from","_location$state","_movieDetails$genres","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","releaseDate","setReleaseDate","location","useLocation","useEffect","fetchApi","then","response","data","release_date","catch","error","console","path","shouldDisplayCastReviews","pathname","endsWith","_jsxs","children","_jsx","to","state","from","src","poster_path","concat","alt","title","substring","Math","round","vote_average","overview","genres","map","genre","index","name","search","Outlet","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}