{"version":3,"file":"static/js/336.fdc89a36.chunk.js","mappings":"6PAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAItBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sIASpBG,EAAQL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qDAKjBK,EAAaP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6DAMvBO,EAAYT,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qFAOvBS,GAAcX,EAAAA,EAAAA,IAAOK,EAAPL,CAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+EAM3BW,EAAYb,EAAAA,GAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yEAMvBa,GAAkBf,EAAAA,EAAAA,IAAOS,EAAPT,CAAiBgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kE,SCKhD,EAtCa,WACX,IAAQe,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OAZAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aACgBT,GACbU,MAAK,SAAAC,GACJJ,EAAQI,EAASC,KAAKN,KACxB,IACCO,OAAM,SAAAC,GACLC,QAAQD,MAAM,uBAAwBA,EACxC,GACJ,GAAG,CAACd,KAIFgB,EAAAA,EAAAA,KAAClC,EAAS,CAAAmC,UACRD,EAAAA,EAAAA,KAAC9B,EAAQ,CAAA+B,SACNX,EAAKY,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAC1B,EAAW,CAAAuB,SAAA,EACVD,EAAAA,EAAAA,KAAC1B,EAAU,CACT+B,IACEF,EAAMG,aAAY,kCAAAC,OACoBJ,EAAMG,cACxC,sHAENE,IAAKL,EAAMM,QAEbT,EAAAA,EAAAA,KAACpB,EAAS,CAAAqB,SAAEE,EAAMM,QAClBL,EAAAA,EAAAA,MAACtB,EAAe,CAAAmB,SAAA,CAAC,cAAYE,EAAMO,eAVnBP,EAAMQ,GAWV,OAKxB,C,mEC9CAC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHpB,EAAW,CACtBqB,kBAAmB,WACjB,OAAOF,EAAAA,EAAAA,IAAU,+BAADL,OAAgCM,GAClD,EAEAE,aAAc,SAAAC,GACZ,OAAOJ,EAAAA,EAAAA,IAAU,yBAADL,OAA0BM,EAAO,WAAAN,OAAUS,GAC7D,EAEAC,gBAAiB,SAAAjC,GACf,OAAO4B,EAAAA,EAAAA,IAAU,UAADL,OAAWvB,EAAO,aAAAuB,OAAYM,GAChD,EAEAK,aAAc,SAAAlC,GACZ,OAAO4B,EAAAA,EAAAA,IAAU,UAADL,OAAWvB,EAAO,qBAAAuB,OAAoBM,GACxD,EAEAM,gBAAiB,SAAAnC,GACf,OAAO4B,EAAAA,EAAAA,IAAU,UAADL,OAAWvB,EAAO,qBAAAuB,OAAoBM,GACxD,E","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  gap: 20px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Actor = styled.li`\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const ActorImage = styled.img`\n  display: block;\n  width: 50%;\n  height: 100%;\n`;\n\nexport const Character = styled.span`\n  display: block;\n  font-size: 12px;\n  color: #666;\n  margin-top: 5px;\n`;\n\nexport const StyledActor = styled(Actor)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ActorName = styled.span`\n  display: center;\n  font-weight: bold;\n  margin-top: 10px;\n`;\n\nexport const StyledCharacter = styled(Character)`\n  font-size: 12px;\n  color: #666;\n  margin-top: 5px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\nimport {\n  Container,\n  CastList,\n  StyledActor,\n  ActorImage,\n  ActorName,\n  StyledCharacter,\n} from './CastStyled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchApi\n      .getMovieCast(movieId)\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching cast:', error);\n      });\n  }, [movieId]);\n  \n\n  return (\n    <Container>\n      <CastList>\n        {cast.map(actor => (\n          <StyledActor key={actor.id}>\n            <ActorImage\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : 'https://www.njca.com.au/wp-content/uploads/2023/03/depositphotos_137014128-stock-illustration-user-profile-icon.jpg'\n              }\n              alt={actor.name}\n            />\n            <ActorName>{actor.name}</ActorName>\n            <StyledCharacter>Character: {actor.character}</StyledCharacter>\n          </StyledActor>\n        ))}\n      </CastList>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\n\nexport const fetchApi = {\n  getTrendingMovies: () => {\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  },\n\n  searchMovies: query => {\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  },\n\n  getMovieDetails: movieId => {\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  },\n\n  getMovieCast: movieId => {\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  },\n\n  getMovieReviews: movieId => {\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  },\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","Actor","_templateObject3","ActorImage","_templateObject4","Character","_templateObject5","StyledActor","_templateObject6","ActorName","_templateObject7","StyledCharacter","_templateObject8","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchApi","then","response","data","catch","error","console","_jsx","children","map","actor","_jsxs","src","profile_path","concat","alt","name","character","id","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}