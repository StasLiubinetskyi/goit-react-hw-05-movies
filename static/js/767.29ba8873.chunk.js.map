{"version":3,"file":"static/js/767.29ba8873.chunk.js","mappings":"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","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  gap: 20px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Actor = styled.li`\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const ActorImage = styled.img`\n  width: 50%;\n  height: auto;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Character = styled.span`\n  display: block;\n  font-size: 12px;\n  color: #666;\n  margin-top: 5px;\n`;\n\nexport const StyledActor = styled(Actor)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ActorName = styled.span`\n  font-weight: bold;\n  margin-top: 10px;\n`;\n\nexport const StyledCharacter = styled(Character)`\n  font-size: 12px;\n  color: #666;\n  margin-top: 5px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\nimport {\n  Container,\n  CastList,\n  StyledActor,\n  ActorImage,\n  ActorName,\n  StyledCharacter,\n} from './CastStyled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchApi\n      .getMovieCast(movieId)\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching cast:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      <CastList>\n        {cast.map(actor => (\n          <StyledActor key={actor.id}>\n            <ActorImage\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : '/placeholder.jpg'\n              }\n              alt={actor.name}\n            />\n            <ActorName>{actor.name}</ActorName>\n            <StyledCharacter>Character: {actor.character}</StyledCharacter>\n          </StyledActor>\n        ))}\n      </CastList>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 300px;\n  margin-right: 20px;\n`;\n\nexport const MovieText = styled.div`\n  flex: 1;\n`;\n\nexport const ToggleButtons = styled.div`\n  margin-bottom: 20px;\n\n  button {\n    margin-right: 10px;\n  }\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  margin-top: 10px;\n  color: #333;\n`;\n\nexport const Genres = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin-top: 10px;\n  color: #333;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 5px 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport {\n  Container,\n  Content,\n  MoviePoster,\n  MovieText,\n  ToggleButtons,\n  Overview,\n  StyledButton,\n} from './MovieDetailsStyled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    fetchApi\n      .getMovieDetails(movieId)\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  const compilePosterURL = path => {\n    return path\n      ? `https://image.tmdb.org/t/p/w500${path}`\n      : 'https://t3.ftcdn.net/jpg/05/90/75/40/360_F_590754013_CoFRYEcAmLREfB3k8vjzuyStsDbMAnqC.jpg';\n  };\n\n  return (\n    <Container>\n      <Link to=\"/movies\">Go back</Link>\n      <Content>\n        <MoviePoster\n          src={compilePosterURL(movieDetails.poster_path)}\n          alt={movieDetails.title}\n        />\n        <MovieText>\n          <h2>{movieDetails.title}</h2>\n          <p>User Score: {movieDetails.vote_average}</p>\n          <Overview>{movieDetails.overview}</Overview>\n        </MovieText>\n      </Content>\n\n      <ToggleButtons>\n        <StyledButton onClick={() => setShowCast(!showCast)}>Cast</StyledButton>\n        <StyledButton onClick={() => setShowReviews(!showReviews)}>\n          Reviews\n        </StyledButton>\n      </ToggleButtons>\n\n      {showCast && <Cast movieId={movieId} />}\n      {showReviews && <Reviews movieId={movieId} />}\n    </Container>\n  );\n};\n\nexport default MovieDetails;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n`;\n\nexport const Author = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Content = styled.p`\n  margin: 10px 0;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\nimport {\n  Container,\n  ReviewList,\n  ReviewItem,\n  Author,\n  Content,\n} from './ReviewsStyled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchApi\n      .getMovieReviews(movieId)\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ReviewList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <Author>{review.author}</Author>\n              <Content>{review.content}</Content>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\n\nexport const fetchApi = {\n  getTrendingMovies: () => {\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  },\n\n  searchMovies: query => {\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  },\n\n  getMovieDetails: movieId => {\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  },\n\n  getMovieCast: movieId => {\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  },\n\n  getMovieReviews: movieId => {\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  },\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","Actor","_templateObject3","ActorImage","_templateObject4","Character","_templateObject5","StyledActor","_templateObject6","ActorName","_templateObject7","StyledCharacter","_templateObject8","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchApi","then","response","data","catch","error","console","_jsx","children","map","actor","_jsxs","src","profile_path","concat","alt","name","character","id","Content","MoviePoster","MovieText","ToggleButtons","Overview","StyledButton","movieDetails","setMovieDetails","_useState3","_useState4","showCast","setShowCast","_useState5","_useState6","showReviews","setShowReviews","path","Link","to","poster_path","title","vote_average","overview","onClick","Cast","Reviews","ReviewList","ReviewItem","Author","reviews","setReviews","results","length","review","author","content","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}