{"version":3,"file":"static/js/115.a54885fc.chunk.js","mappings":"sMAuDA,UAnDe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAmBA,OACE,4BACE,2CACA,kBACEC,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAeM,EAAEC,OAAOH,MAA5B,KAEb,mBAAQI,QAzBS,WACnBC,EAAAA,EAAAA,aACgBV,GACbW,MAAK,SAAAC,GACJT,EAAiBS,EAASC,KAAKC,QAChC,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,EAC1C,GACJ,EAgBG,oBACuB,YAAtBnB,EAASqB,WACR,SAAC,KAAD,CAAMC,GAAG,UAAT,qBACC,KACH,wBACGjB,EAAckB,KAAI,SAAAC,GAAK,OACtB,yBACE,UAAC,KAAD,CAAMF,GAAE,kBAAaE,EAAMC,IAA3B,WACE,gBACEC,KAvBWC,EAuBWH,EAAMI,YAtBjCD,EAAI,yCAC2BA,GAClC,6FAqBQE,IAAKL,EAAMM,QACV,IACFN,EAAMM,UANFN,EAAMC,IApBE,IAAAE,CAmBK,QAc/B,C,mECnDDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHnB,EAAW,CACtBoB,kBAAmB,WACjB,OAAOF,EAAAA,EAAAA,IAAA,sCAAyCC,GACjD,EAEDE,aAAc,SAAAC,GACZ,OAAOJ,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDG,GAC5D,EAEDC,gBAAiB,SAAAC,GACf,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,GAC/C,EAEDM,aAAc,SAAAD,GACZ,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,GACvD,EAEDO,gBAAiB,SAAAF,GACf,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,GACvD,E","sources":["components/Movies/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchApi } from '../../services/fetchApi';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = () => {\n    fetchApi\n      .searchMovies(searchQuery)\n      .then(response => {\n        setSearchResults(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error searching movies:', error);\n      });\n  };\n\n  const compilePosterURL = path => {\n    return path\n      ? `https://image.tmdb.org/t/p/w250${path}`\n      : 'https://t3.ftcdn.net/jpg/05/90/75/40/360_F_590754013_CoFRYEcAmLREfB3k8vjzuyStsDbMAnqC.jpg';\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {location.pathname !== '/movies' && (\n        <Link to=\"/movies\">Go back</Link>\n      )}{' '}\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={compilePosterURL(movie.poster_path)}\n                alt={movie.title}\n              />{' '}\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '0f593a0454339471521d6a9985cd9e6b';\n\nexport const fetchApi = {\n  getTrendingMovies: () => {\n    return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  },\n\n  searchMovies: query => {\n    return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  },\n\n  getMovieDetails: movieId => {\n    return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  },\n\n  getMovieCast: movieId => {\n    return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  },\n\n  getMovieReviews: movieId => {\n    return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  },\n};\n"],"names":["location","useLocation","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","type","value","onChange","e","target","onClick","fetchApi","then","response","data","results","catch","error","console","pathname","to","map","movie","id","src","path","poster_path","alt","title","axios","API_KEY","getTrendingMovies","searchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}